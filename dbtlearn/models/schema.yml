version: 2

models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains Airbnb listings.
    columns:

    - name: listing_id
      description: Primary Key for the listing.
      tests:
        - unique
        - not_null
    - name: host_id
      description: The host's id. Reference the host table.
      tests:
        - not_null
        - relationships:
            to: ref('dim_hosts_cleansed')
            field: host_id
    - name: room_type
      description: Type of apartment / room.
      tests:
        - accepted_values:
            values: ['Entire home/apt',
                     'Private room',
                     'Shared room',
                     'Hotel room']
    - name: minimum_nights
      description: '{{ doc("dim_listing_cleansed__minimum_nights") }}'
      tests:
        - positive_value


  - name: dim_hosts_cleansed
    description: Cleansed table containing Airbnb Hosts basic information.

    columns:
      
      - name: CREATED_AT
        description: When the host joined the App
        tests:
          - not_null

      - name: UPDATED_AT
        description: Last time the host information has been updated
        tests:
          - not_null
      
      - name: HOST_ID
        description: Host's unique ID
        tests:
          - not_null
          - unique
      
      - name: HOST_NAME
        description: Host's Name
        tests:
          - not_null
          - dbt_utils.not_empty_string
      
      - name: IS_SUPERHOST
        description: If Host's is IS_SUPERHOST or not 
        tests:
          - dbt_utils.not_empty_string
          
  - name: dim_listings_w_hosts
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: source("airbnb", "listings")
          factor: 1 # (Optional)
          row_condition: "listing_id is not null" # (Optional)
          compare_row_condition: "id is not null" # (Optional)
    columns:
      - name: price
        tests:
          - dbt_expectations.expect_column_quantile_values_to_be_between:
              quantile: .99
              min_value: 50 # (Optional)
              max_value: 500 # (Optional)
          - dbt_expectations.expect_column_max_to_be_between:
              max_value: 5000 # (Optional)
              config:
                severity: warn
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: number